{"version":3,"file":"tiny-events.min.js","sources":["../src/tiny-events.ts","../src/index.ts"],"sourcesContent":["/**\n * TinyEvents is a tiny, framework-agnostic, event utility library for modern browsers(IE 11+).\n * Supports jQuery like syntax. just 1 kb gzipped.\n * Author - Sachin Neravath\n */\n\nexport type Selector = EventTarget | NodeList | string | null;\nexport type TinyEventsElements = EventTarget | NodeList | null;\nexport type TinyEventsElement = EventTarget | Node | null;\ninterface EventListener {\n    (evt: Event): void;\n}\ninterface MatchesElement extends Element {\n    matchesSelector(selectors: string): boolean;\n    msMatchesSelector(selectors: string): boolean;\n    mozMatchesSelector(selectors: string): boolean;\n    webkitMatchesSelector(selectors: string): boolean;\n    oMatchesSelector(selectors: string): boolean;\n}\n\nexport interface TinyEventsNode extends Node {\n    eventEmitterUUID: string;\n}\n// Custom event polyfill for old browsers\n// eslint-disable-next-line func-names\n(function () {\n    /* istanbul ignore next */\n    if (typeof window.CustomEvent === 'function') return false;\n\n    /* istanbul ignore next */\n    function CustomEvent(\n        event: string,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        params: { bubbles: boolean; cancelable: boolean; detail: any },\n    ) {\n        /* istanbul ignore next */\n        // eslint-disable-next-line no-param-reassign\n        params = params || { bubbles: false, cancelable: false, detail: null };\n        const evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(\n            event,\n            params.bubbles,\n            params.cancelable,\n            params.detail,\n        );\n        return evt;\n    }\n\n    /* istanbul ignore next */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).CustomEvent = CustomEvent;\n})();\n// eslint-disable-next-line import/prefer-default-export\nexport class TinyEvents {\n    elements: TinyEventsElements;\n\n    element: TinyEventsElement;\n\n    static eventListeners: { [x: string]: EventListener[] };\n\n    constructor(selector: Selector) {\n        this.elements = TinyEvents.getSelector(selector);\n        this.element = this.getFirstEl();\n        return this;\n    }\n\n    static getIdFromSelector(selector: string): string | undefined {\n        if (selector.indexOf(',') > -1) {\n            return;\n        }\n        const selectors = selector.split(' ');\n        const lastSelector = selectors[selectors.length - 1];\n        const fl = lastSelector.substring(0, 1);\n        if (fl === '#') {\n            return lastSelector.substring(1);\n        }\n    }\n\n    static getSelector(selector: Selector): TinyEventsElements {\n        if (typeof selector !== 'string') {\n            return selector;\n        }\n\n        // For performance reasons, use getElementById\n        const id = TinyEvents.getIdFromSelector(selector);\n        if (id) {\n            return document.getElementById(id);\n        }\n        return document.querySelectorAll(selector);\n    }\n\n    static isNodeList(elements: TinyEventsElements): boolean {\n        if (!elements) {\n            return false;\n        }\n        return Object.prototype.isPrototypeOf.call(\n            NodeList.prototype,\n            elements,\n        );\n    }\n\n    getFirstEl(): Node {\n        if (TinyEvents.isNodeList(this.elements)) {\n            return (this.elements as NodeList)[0];\n        }\n        return this.elements as Node;\n    }\n\n    each(func: (el: TinyEventsElement, index: number) => void): this {\n        if (!this.elements) {\n            return this;\n        }\n        if (TinyEvents.isNodeList(this.elements)) {\n            [].slice\n                .call(this.elements as ArrayLike<Node>)\n                .forEach((el, index) => {\n                    func.call(el, el, index);\n                });\n        } else {\n            func.call(this.element, this.element, 0);\n        }\n        return this;\n    }\n\n    on(\n        eventNames: string,\n        selector: EventListener | string,\n        listener?: EventListener,\n    ): this {\n        // Manage multiple events\n        eventNames.split(' ').forEach((eventName) => {\n            this.each((el) => {\n                const tNEventName = TinyEvents.setEventName(\n                    el as TinyEventsNode,\n                    eventName,\n                );\n\n                let listenerFn = listener;\n                if (typeof selector === 'string') {\n                    listenerFn = (evt: Event) => {\n                        if (TinyEvents.foundTarget(evt.target, selector)) {\n                            if (typeof listener === 'function') {\n                                listener(evt);\n                            }\n                        }\n                    };\n                } else {\n                    listenerFn = selector;\n                }\n\n                if (typeof listenerFn === 'function') {\n                    if (\n                        !Array.isArray(TinyEvents.eventListeners[tNEventName])\n                    ) {\n                        TinyEvents.eventListeners[tNEventName] = [];\n                    }\n                    TinyEvents.eventListeners[tNEventName].push(listenerFn);\n\n                    // https://github.com/microsoft/TypeScript/issues/28357\n                    el?.addEventListener(\n                        eventName.split('.')[0],\n                        listenerFn as EventListener,\n                    );\n                }\n            });\n        });\n\n        return this;\n    }\n\n    static foundTarget(target: EventTarget | null, selector: string): boolean {\n        return (\n            TinyEvents.is(target as MatchesElement, selector) ||\n            TinyEvents.contains(selector, target as Node)\n        );\n    }\n\n    static createNewEvent(eventName: string): Event {\n        let event;\n        /* istanbul ignore next */\n        if (typeof Event === 'function') {\n            event = new Event(eventName);\n        } else {\n            /* istanbul ignore next */\n            event = document.createEvent('Event');\n            /* istanbul ignore next */\n            event.initEvent(eventName, true, true);\n        }\n        return event;\n    }\n\n    static generateUUID(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            const r = (Math.random() * 16) | 0;\n            const v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n\n    static setEventName(el: TinyEventsNode, eventName: string): string {\n        // Need to verify https://stackoverflow.com/questions/1915341/whats-wrong-with-adding-properties-to-dom-element-objects\n        const elementUUId = el.eventEmitterUUID;\n        const uuid = elementUUId || TinyEvents.generateUUID();\n        // eslint-disable-next-line no-param-reassign\n        el.eventEmitterUUID = uuid;\n        return TinyEvents.getEventName(eventName, uuid);\n    }\n\n    static getElementEventName(el: TinyEventsNode, eventName: string): string {\n        const elementUUId = el.eventEmitterUUID;\n        /* istanbul ignore next */\n        const uuid = elementUUId || TinyEvents.generateUUID();\n        // eslint-disable-next-line no-param-reassign\n        el.eventEmitterUUID = uuid;\n        return TinyEvents.getEventName(eventName, uuid);\n    }\n\n    static getEventName(eventName: string, uuid: string): string {\n        return `${eventName}__EVENT_EMITTER__${uuid}`;\n    }\n\n    static getEventNameFromId(eventName: string): string {\n        return eventName.split('__EVENT_EMITTER__')[0];\n    }\n\n    one(\n        eventNames: string,\n        selector: EventListener | string,\n        listener?: EventListener,\n    ): this {\n        eventNames.split(' ').forEach((eventName) => {\n            this.each((el) => {\n                const listnerFn = (evt: Event) => {\n                    new TinyEvents(el).off(eventName);\n                    if (typeof selector === 'string') {\n                        if (listener) {\n                            listener(evt);\n                        }\n                    } else {\n                        selector(evt);\n                    }\n                };\n\n                if (typeof selector === 'string') {\n                    new TinyEvents(el).on(eventName, selector, listnerFn);\n                } else {\n                    new TinyEvents(el).on(eventName, listnerFn);\n                }\n            });\n        });\n        return this;\n    }\n\n    off(eventNames: string): this {\n        Object.keys(TinyEvents.eventListeners).forEach((tNEventName) => {\n            const currentEventName = TinyEvents.getEventNameFromId(tNEventName);\n            eventNames.split(' ').forEach((eventName) => {\n                if (TinyEvents.isEventMatched(eventName, currentEventName)) {\n                    this.each((el) => {\n                        if (\n                            TinyEvents.getElementEventName(\n                                el as TinyEventsNode,\n                                currentEventName,\n                            ) === tNEventName\n                        ) {\n                            TinyEvents.eventListeners[tNEventName].forEach(\n                                (listener) => {\n                                    (el as HTMLElement).removeEventListener(\n                                        currentEventName.split('.')[0],\n                                        listener,\n                                    );\n                                },\n                            );\n                            delete TinyEvents.eventListeners[tNEventName];\n                        }\n                    });\n                }\n            });\n        });\n        return this;\n    }\n\n    trigger(event: string, detail?: unknown): this {\n        if (!this.element) {\n            return this;\n        }\n        const eventName = event.split('.')[0];\n        const isNativeEvent =\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            typeof (document.body as any)[`on${eventName}`] !== 'undefined';\n        if (isNativeEvent) {\n            this.each((el) => {\n                el?.dispatchEvent(TinyEvents.createNewEvent(eventName));\n            });\n            return this;\n        }\n        const customEvent = new CustomEvent(eventName, {\n            detail: detail || null,\n        });\n        this.each((el) => {\n            el?.dispatchEvent(customEvent);\n        });\n        return this;\n    }\n\n    static contains(selector: string, child: Node): boolean {\n        let found = false;\n        // eslint-disable-next-line no-use-before-define\n        new TinyEvents(selector).each((el) => {\n            if (el !== child && (el as Node).contains(child)) {\n                found = true;\n            }\n        });\n        return found;\n    }\n\n    static is(el: MatchesElement, otherEl: string): boolean {\n        /* istanbul ignore next */\n        return (\n            el.matches ||\n            el.matchesSelector ||\n            el.msMatchesSelector ||\n            el.mozMatchesSelector ||\n            el.webkitMatchesSelector ||\n            el.oMatchesSelector\n        ).call(el, otherEl);\n    }\n\n    static isEventMatched(event: string, eventName: string): boolean {\n        const eventNamespace = eventName.split('.');\n        return event\n            .split('.')\n            .filter((e) => e)\n            .every((e) => eventNamespace.indexOf(e) !== -1);\n    }\n}\n\nTinyEvents.eventListeners = {};\n","import { Selector, TinyEvents } from './tiny-events';\n\nfunction tinyEvents(selector: Selector): TinyEvents {\n    return new TinyEvents(selector);\n}\nexport default tinyEvents;\n"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","selector","this","elements","TinyEvents","getSelector","element","getFirstEl","indexOf","selectors","split","lastSelector","length","substring","id","getIdFromSelector","getElementById","querySelectorAll","Object","prototype","isPrototypeOf","call","NodeList","isNodeList","func","slice","forEach","el","index","eventNames","listener","eventName","_this","each","tNEventName","setEventName","listenerFn","foundTarget","target","Array","isArray","eventListeners","push","addEventListener","is","contains","Event","initEvent","replace","c","r","Math","random","toString","uuid","eventEmitterUUID","generateUUID","getEventName","listnerFn","off","on","keys","currentEventName","getEventNameFromId","isEventMatched","getElementEventName","removeEventListener","body","dispatchEvent","createNewEvent","customEvent","child","found","otherEl","matches","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","eventNamespace","filter","e","every"],"mappings":"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"}